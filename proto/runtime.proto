syntax = "proto3";
package runtime;

import "google/protobuf/timestamp.proto";

service Runtime {
  // Load a service file to be ready to start it
  rpc Load(LoadRequest) returns (LoadResponse);

  // Start a loaded service file
  rpc Start(StartRequest) returns (StartResponse);
  
  // Stop a started service
  rpc Stop(StopRequest) returns (StopResponse);

  // Channel to notify a service has been stopped
  rpc SubscribeStop(SubscribeStopRequest) returns (stream SubscribeStopResponse);

  // Subscribe to runtime logs
  rpc SubscribeLogs(SubscribeLogsRequest) returns (stream LogItem);
}

message LoadRequest {
  // Name of service to load
  string service_name = 1;

  // Path to compiled file to load for service
  string path = 2;

  // Secrets that belong to this deployment
  map<string, string> secrets = 10;
}

message LoadResponse {
  // Could the service be loaded
  bool success = 1;
}

message StartRequest {
  // Id to associate with the deployment being started
  bytes deployment_id = 1;
  // Address and port to start the service on
  string ip = 3;
}

message StartResponse {
  // Was the start successful
  bool success = 1;
}

message StopRequest {}

message StopResponse {
  // Was the stop successful
  bool success = 1;
}

message SubscribeStopRequest {}

message SubscribeStopResponse {
  // Reason the service has stopped
  StopReason reason = 1;

  // Any extra message to go with the reason. If there are any
  string message = 2;
}

enum StopReason {
  // User requested this stop
  Request = 0;

  // Service stopped by itself
  End = 1;

  // Service crashed
  Crash = 2;
}

message SubscribeLogsRequest {}

message LogItem {
  bytes id = 1;
  google.protobuf.Timestamp timestamp = 2;
  LogState state = 3;
  LogLevel level = 4;
  optional string file = 5;
  optional uint32 line = 6;
  string target = 7;
  bytes fields = 8;
}

enum LogState {
  Queued = 0;
  Building = 1;
  Built = 2;
  Loading = 3;
  Running = 4;
  Completed = 5;
  Stopped = 6;
  Crashed = 7;
  Unknown = 50;
}

enum LogLevel {
  Trace = 0;
  Debug = 1;
  Info = 2;
  Warn = 3;
  Error = 4;
}
