syntax = "proto3";
package provisioner;

service Provisioner {
  rpc ProvisionDatabase(DatabaseRequest) returns (DatabaseResponse);
  rpc DeleteDatabase(DatabaseRequest) returns (DatabaseDeletionResponse);

  rpc ProvisionStorage(StorageRequest) returns (StorageResponse);
  rpc DeleteStorage(StorageRequest) returns (StorageDeletionResponse);
}

message DatabaseRequest {
  string project_name = 1;
  oneof db_type {
    Shared Shared = 10;
    AwsRds AwsRds = 11;
  };
}

message Shared {
  oneof engine {
    string postgres = 1;
    string mongodb = 50;
  }
}

message AwsRds {
  oneof engine {
    RdsConfig postgres = 1;
    RdsConfig mysql = 2;
    RdsConfig mariadb = 3;
  }
}

message RdsConfig {}

message DatabaseResponse {
  string username = 1;
  string password = 2;
  string database_name = 3;
  string engine = 4;
  string address_private = 5;
  string address_public = 6;
  string port = 7;
}

message DatabaseDeletionResponse {}

message StorageRequest {
  string project_name = 1;
  string storage_name = 2;

  oneof type {
    Bucket Bucket = 10;
  };
}

message Bucket {
  oneof type {
    string s3 = 1;
  }
}

message BucketCredentials {
  oneof type {
    S3BucketCredentials s3 = 1;
  }
}

message S3BucketCredentials {
  string access_key = 1;
  string secret_key = 2;
  string security_token = 3;
  string session_token = 4;
  string expiration = 5;
}

message StorageResponse {
  BucketCredentials BucketCredentials = 1;
  string uri = 2;
}

message StorageDeletionResponse {}
