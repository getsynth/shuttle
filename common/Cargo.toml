[package]
name = "shuttle-common"
version = "0.18.0"
edition.workspace = true
license.workspace = true
repository.workspace = true
description = "Common library for the shuttle platform (https://www.shuttle.rs/)"

[dependencies]
anyhow = { workspace = true }
async-recursion = "1.0.4"
async-trait = { workspace = true, optional = true }
axum = { workspace = true, optional = true }
base16ct = { version = "0.1.1", features = ["alloc"] }
bytes = { workspace = true, optional = true }
chrono = { workspace = true }
comfy-table = { version = "6.2.0", optional = true }
crossterm = { workspace = true, optional = true }
dirs = { workspace = true }
headers = { workspace = true, optional = true }
http = { workspace = true, optional = true }
http-body = { version = "0.4.5", optional = true }
http-serde = { version = "1.1.2", optional = true }
hyper = { workspace = true, optional = true }
jsonwebtoken = { workspace = true, optional = true }
opentelemetry = { workspace = true, optional = true }
opentelemetry-http = { workspace = true, optional = true }
opentelemetry-otlp = { version = "0.12.0", optional = true }
opentelemetry-proto = { version = "0.2.0", optional = true }
pin-project = { workspace = true, optional = true }
prost-types = { workspace = true, optional = true }
rand = { workspace = true, optional = true }
regex = "1.5.6"
reqwest = { workspace = true, optional = true }
rmp-serde = { workspace = true, optional = true }
rustrict = { version = "0.7.4", optional = true }
serde = { workspace = true, features = ["derive", "std"] }
serde_json = { workspace = true }
sha2 = "0.10.2"
sqlx = { workspace = true, optional = true, features = ["runtime-tokio-native-tls"] }
strum = { workspace = true, features = ["derive"] }
thiserror = { workspace = true, optional = true }
giti = { workspace = true, features = ["rt-multi-thread", "fs"] }
tokio-stream = "0.1.14"
tokio-tar = "0.3.0"
tonic = { workspace = true, optional = true }
once_cell = { workspace = true, optional = true }
tower = { workspace = true, optional = true }
tower-http = { workspace = true, optional = true }
tracing = { workspace = true, features = ["std"] }
tracing-opentelemetry = { workspace = true, optional = true }
tracing-subscriber = { workspace = true, optional = true }
ttl_cache = { workspace = true, optional = true }
url = { workspace = true }
utoipa = { workspace = true, optional = true }
uuid = { workspace = true, features = ["v4", "serde"], optional = true }
ulid = { workspace = true }

[features]
backend = [
    "async-trait",
    "axum/matched-path",
    "claims",
    "hyper/client",
    "opentelemetry-otlp",
    "opentelemetry-proto/gen-tonic",
    "opentelemetry-proto/logs",
    "thiserror",
    "tokio",
    "tonic",
    "tower-http",
    "tracing-subscriber/env-filter",
    "tracing-subscriber/fmt",
    "ttl_cache",
]
builder = []
claims = [
    "bytes",
    "chrono/clock",
    "headers",
    "http",
    "http-body",
    "jsonwebtoken",
    "opentelemetry",
    "opentelemetry-http",
    "pin-project",
    "tower",
    "tracing",
    "tracing-opentelemetry",
]
display = ["chrono/clock", "comfy-table", "crossterm"]
error = ["prost-types", "thiserror", "uuid"]
openapi = ["utoipa/chrono", "utoipa/uuid"]
models = ["async-trait", "display", "http", "reqwest", "service"]
persist = ["sqlx/sqlite", "rand"]
service = ["chrono/serde", "once_cell", "rustrict", "serde/derive", "uuid"]
tracing = []
wasm = [
    "chrono/clock",
    "http-serde",
    "http",
    "rmp-serde",
    "tracing",
    "tracing-subscriber",
]

[dev-dependencies]
axum = { workspace = true }
base64 = { workspace = true }
cap-std = { workspace = true }
hyper = { workspace = true }
proptest = "1.1.0"
ring = { workspace = true }
tokio = { workspace = true, features = ["macros", "rt-multi-thread"] }
tower = { workspace = true, features = ["util"] }
tracing-fluent-assertions = "0.3.0"
tracing-subscriber = { workspace = true }
