[package]
name = "shuttle-deployer"
version = "0.43.0"
edition.workspace = true
license.workspace = true
description = "Service with instances created per project for handling the compilation, loading, and execution of Shuttle services"
publish = false

[dependencies]
shuttle-backends = { workspace = true }
shuttle-common = { workspace = true, features = ["models", "sqlx"] }
shuttle-proto = { workspace = true, features = ["provisioner-client", "resource-recorder-client"] }
shuttle-service = { workspace = true, features = ["builder", "runner"] }

anyhow = { workspace = true }
async-trait = { workspace = true }
axum = { workspace = true, features = ["headers", "json", "query", "ws"] }
cargo_metadata = { workspace = true }
chrono = { workspace = true }
clap = { workspace = true }
flate2 = { workspace = true }
home = { workspace = true }
hyper = { workspace = true, features = ["client", "http1", "http2", "tcp"] }
hyper-reverse-proxy = { workspace = true }
once_cell = { workspace = true }
opentelemetry = { workspace = true }
prost-types = { workspace = true }
portpicker = { workspace = true }
rmp-serde = { workspace = true }
serde = { workspace = true }
serde_json = { workspace = true }
sqlx = { workspace = true, features = [
  "sqlite",
  "chrono",
  "json",
  "migrate",
  "uuid",
] }
strum = { workspace = true }
tar = { workspace = true }
thiserror = { workspace = true }
tokio = { workspace = true, features = ["fs", "process", "rt-multi-thread"] }
toml = { workspace = true }
tonic = { workspace = true }
tower = { workspace = true, features = ["make"] }
tracing = { workspace = true, features = ["default"] }
tracing-opentelemetry = { workspace = true }
tracing-subscriber = { workspace = true, features = [
  "default",
  "env-filter",
  "fmt",
] }
ulid = { workspace = true }
uuid = { workspace = true, features = ["v4"] }

[dev-dependencies]
ctor = { workspace = true }
hex = "0.4.3"
rand = { workspace = true }
shuttle-common-tests = { workspace = true }
tempfile = { workspace = true }
tokio-stream = { workspace = true }
